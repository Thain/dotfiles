
#+TITLE: Literate Configuration
#+STARTUP: overview hideblocks

Externally loaded configs:
- [[file:lit/keybinds.org][Keybinds]]
- [[file:lit/org-mode.org][Org]]
- [[file:lit/LaTeX.org][LaTeX]]
#+begin_src emacs-lisp
(org-babel-load-file "~/dots/doom/lit/keybinds.org")
(org-babel-load-file "~/dots/doom/lit/org-mode.org")
(org-babel-load-file "~/dots/doom/lit/LaTeX.org")
#+end_src
* Initial setup
** Name & Email
Some functionality uses this for identification, e.g. GPG configuration, email clients, file templates and snippets.
#+begin_src emacs-lisp
(setq user-full-name "Liam Chung"
      user-mail-address "lwalkerchung@gmail.com")
#+end_src
** Dashboard
Setting the ascii function for rendering on my dashboard.
#+begin_src emacs-lisp :tangle no
(defun doom-dashboard-draw-ascii-emacs-banner-fn ()
  (let* ((banner
          '(",---.,-.-.,---.,---.,---."
            "|---'| | |,---||    `---."
            "`---'` ' '`---^`---'`---'"))
         (longest-line (apply #'max (mapcar #'length banner))))
    (put-text-property
     (point)
     (dolist (line banner (point))
       (insert (+doom-dashboard--center
                +doom-dashboard--width
                (concat line (make-string (max 0 (- longest-line (length line))) 32)))
               "\n"))
     'face 'doom-dashboard-banner)))
#+end_src
#+begin_src emacs-lisp
(defun a-very-pretty-flower ()
  (let* ((banner '("                              ....                                  "
                   "                           ,;;\'\'\'\';;,                    ,;;;;,     "
                   "                 ,        ;;\'      `;;,               .,;;;\'   ;    "
                   "              ,;;;       ;;          `;;,\';;;,.     ,%;;\'     \'     "
                   "            ,;;,;;       ;;         ,;`;;;, `;::.  %%;\'             "
                   "           ;;;,;;;       `\'       ,;;; ;;,;;, `::,%%;\'              "
                   "           ;;;,;;;,          .,%%%%%\'% ;;;;,;;   %;;;               "
                   " ,%,.      `;;;,;;;,    .,%%%%%%%%%\'%; ;;;;;,;;  %;;;               "
                   ";,`%%%%%%%%%%`;;,;;\'%%%%%%%%%%%%%\'%%\'  `;;;;;,;, %;;;               "
                   ";;;,`%%%%%%%%%%%,; ..`%%%%%%%%;\'%%%\'    `;;;;,;; %%;;               "
                   " `;;;;;,`%%%%%,;;/, .. `\"\"\"\'\',%%%%%      `;;;;;; %%;;,              "
                   "    `;;;;;;;,;;/////,.    ,;%%%%%%%        `;;;;,`%%;;              "
                   "           ;;;/%%%%,%///;;;\';%%%%%%,          `;;;%%;;,             "
                   "          ;;;/%%%,%%%%%/;;;\';;\'%%%%%,             `%%;;             "
                   "         .;;/%%,%%%%%//;;\'  ;;;\'%%%%%,             %%;;,            "
                   "         ;;//%,%%%%//;;;\'   `;;;;\'%%%%             `%;;;            "
                   "         ;;//%,%//;;;;\'      `;;;;\'%%%              %;;;,           "
                   "         `;;//,/;;;\'          `;;;\'%%\'              `%;;;           "
                   "           `;;;;\'               `;\'%\'                `;;;;          "
                   "                                  \'      .,,,.        `;;;;         "
                   "                                      ,;;;;;;;;;;,     `;;;;        "
                   "                                     ;;;\'    ;;;,;;,    `;;;;       "
                   "                                     ;;;      ;;;;,;;.   `;;;;      "
                   "                                      `;;      ;;;;;,;;   ;;;;      "
                   "                                        `\'      `;;;;,;;  ;;;;      "
                   "                                                   `;;,;, ;;;;      "
                   "                                                      ;;, ;;;;      "
                   "                                                        \';;;;;      "
                   "                                                         ;;;;;      "
                   "                                                        .;;;;\'      "
                   "                                                       .;;;;\'       "
                   "                                                      ;;;;;\'        "
                   "                                                    ,;;;;\'          "))
         (longest-line (apply #'max (mapcar #'length banner))))
    (put-text-property
     (point)
     (dolist (line banner (point))
       (insert (+doom-dashboard--center
                +doom-dashboard--width
                (concat line (make-string (max 0 (- longest-line (length line))) 32)))
               "\n"))
     'face 'doom-dashboard-banner)))
 #+end_src
Set the ascii banner to be my ascii function, remove the default menu and footer, and lastly, remove the need for the cursor to display in the dashboard buffer.
#+begin_src emacs-lisp
; (setq +doom-dashboard-ascii-banner-fn #'doom-dashboard-draw-ascii-emacs-banner-fn)
(setq +doom-dashboard-ascii-banner-fn #'a-very-pretty-flower)
(remove-hook '+doom-dashboard-functions #'doom-dashboard-widget-shortmenu)
(remove-hook '+doom-dashboard-functions #'doom-dashboard-widget-footer)
(setq-hook! '+doom-dashboard-mode-hook cursor-type nil)
(setq-hook! '+doom-dashboard-mode-hook evil-normal-state-cursor nil)
#+end_src
** Theme
My theme, with some old ones I've used thrown in.
#+begin_src emacs-lisp
;;alternatives: doom-dracula, doom-one, doom-solarized-dark, doom-palenight
;(setq doom-theme 'doom-nord)
;(setq doom-theme 'doom-nano-dark)
(setq doom-theme 'doom-palenight)
(setq projectile-project-search-path '("~/documents" ) ;; default project dir
      line-move-visual nil ;; no visual line mode, ie moving across wrapped lines are separate
      display-line-numbers-type t ;; line numbers: nil for none, relative, or t for reg
      ;doom-font (font-spec :family "JetBrains Mono" :size 22)
      ;doom-font (font-spec :family "Roboto Mono" :size 22)
      doom-font (font-spec :family "FiraCode Nerd Font" :size 16 :weight 'regular)
      confirm-kill-emacs nil) ;; do not ask if i want to exit
#+end_src
** Misc stuff
#+begin_src emacs-lisp
;; i think it should work better now since i put snippets back in packages.el?
;;(setq doom-snippets-dir "~/.doom.d/snippets/")
;;(setq +file-templates-dir "~/.doom.d/snippets/")
(set-file-template! "\\.tex$" :trigger "latex-default")
;;(yas-reload-all)

;; when opening file, read number of lines and add width to line number column
(defun display-line-numbers-equalize ()
  (setq display-line-numbers-width (length (number-to-string (line-number-at-pos (point-max))))))
(add-hook 'find-file-hook 'display-line-numbers-equalize)

;; Hide the tabs since I don't want to click on them
(setq tab-bar-show nil
      desktop-save-mode t)
#+end_src
** Mode hooks
Require modes and set default modes for file extensions
#+begin_src emacs-lisp
(require 'web-mode)
(require 'pdf-tools)
(add-to-list 'auto-mode-alist '("\\.html\;" . web-mode))
(add-to-list 'auto-mode-alist '("\\.php\;" . web-mode))
(add-to-list 'auto-mode-alist '("\\.js\;" . js-mode))
;(add-to-list 'auto-mode-alist '("\\.fish\;" . fish-mode))
(add-to-list 'auto-mode-alist '("\\.pdf\;" . pdf-tools))

(use-package! kbd-mode)
(add-to-list 'auto-mode-alist '("\\.kbd\;" . kbd-mode))

#+end_src
** Modeline
#+begin_src emacs-lisp
; (use-package lambda-line
;   :custom
;   (lambda-line-icon-time nil) ;; requires ClockFace font (see below)
;   (lambda-line-position 'top) ;; Set position of status-line
;   (lambda-line-abbrev t) ;; abbreviate major modes
;   (lambda-line-hspace " ")  ;; add some cushion
;   (lambda-line-prefix t) ;; use a prefix symbol
;   (lambda-line-prefix-padding nil) ;; no extra space for prefix
;   (lambda-line-status-invert nil)  ;; no invert colors
;   (lambda-line-gui-ro-symbol  " ◉") ;; symbols
;   (lambda-line-gui-mod-symbol " ●")
;   (lambda-line-gui-rw-symbol  " ○")
;   (lambda-line-space-top +.60)  ;; padding on top and bottom of line
;   (lambda-line-space-bottom -.60)
;   (lambda-line-symbol-position 0) ;; adjust the vertical placement of symbol
;   :config
;   ;; activate lambda-line
;   (lambda-line-mode)
;   ;; set divider line in footer
;   (when (eq lambda-line-position 'top)
;     (setq-default mode-line-format (list "%_"))
;     (setq mode-line-format (list "%_"))))
#+end_src
* Dired
** Config                                           :CLEAN:
*** Dired ls options, recursive copying and deleting
it seems -p doesn't work as it messes up the "R" mv to rewriting when you try to move multiple directories.
#+begin_src emacs-lisp
(after! dired
   ;(setq dired-listing-switches "-Aphl -v --group-directories-first"
   (setq dired-listing-switches "-AFhl --group-directories-first"
        dired-recursive-copies 'always
        dired-recursive-deletes 'always))
#+end_src
*** What do these do
Hook for sort-toggle-or-edit; not really sure what it does
#+begin_src emacs-lisp
(add-hook 'dired-mode-hook
      (lambda ()
        (dired-sort-toggle-or-edit)))
#+end_src
*** Omit mode
Hook to enable and then configure omit mode, hiding some files for readability.
Turn off dired omit mode (SPC m h) to show them
#+begin_src emacs-lisp
(add-hook 'dired-mode-hook
      (lambda ()
        (dired-hide-details-mode)))
(setq dired-omit-files
    (rx (or (seq bol (? ".") "#")     ;; emacs autosave files
        (seq bol "." (not (any "."))) ;; dot-files
        (seq "~" eol)                 ;; backup-files
        (seq bol "CVS" eol)           ;; CVS dirs
        )))
#+end_src
*** file previewing
Doesn't currently work for pdfs unfortunately.
#+begin_src emacs-lisp
(map! :map dired-mode-map :n "v" 'dired-view-file)
(map! :map view-mode-map :n "v" 'View-quit)
(map! :map pdf-view-mode-map :n "v" 'View-quit)
#+end_src
* PDF
** Hooks for pdf viewing                            :CLEAN:
#+begin_src emacs-lisp
(add-hook 'pdf-outline-buffer-mode-hook #'pdf-outline-hook)
(add-hook 'pdf-view-mode-hook 'pdf-view-midnight-minor-mode)

(defun pdf-outline-hook ()
  (display-line-numbers-mode -1) ;; don't display line numbers
  (setq left-margin-width 2)     ;;
  (outline-hide-sublevels 1))

#+end_src
open pdfs scaled to fit page
#+begin_src emacs-lisp
(after! pdf-tools
  (setq-default pdf-view-display-size 'fit-page))
#+end_src
automatically annotate highlights
#+begin_src emacs-lisp
(after! pdf-tools
  (setq pdf-annot-activate-created-annotations t))

(setq pdf-view-use-scaling t)
(setq pdf-view-midnight-invert nil)
#+end_src
** keymap                                           :CLEAN:
#+begin_src emacs-lisp
(map! :after pdf-tools
      :map pdf-isearch-active-mode-map
      [return]  'isearch-repeat-forward
      "ESC"     'isearch-cancel
      )

 (custom-set-faces!
   '(pdf-isearch-match :background "MediumSeaGreen"))

#+end_src
** centering when zooming
want to recenter the document when zooming in or out.
The relevant functions are:
- ~pdf-view-shrink~
- ~pdf-view-enlarge~
#+begin_src emacs-lisp
(defun pdf-zoom-in ()
  (pdf-view-shrink)
  (pdf-view-center-in-window))

(defun pdf-zoom-out ()
  (pdf-view-enlarge)
  (pdf-view-center-in-window))
#+end_src
* EMMS
** Initialization                                   :CLEAN:
#+begin_src emacs-lisp
(emms-all)
(emms-history-load)
(emms-default-players)
#+end_src
Other config pieces pulled from elsewhere; do I want/need them?
#+begin_src emacs-lisp
;(require 'emms-source-file nil t)
;(require 'emms-source-playlist nil t)
(when (require 'emms-player-mpv nil t)
    (add-to-list 'emms-player-mpv-parameters
            (setq emms-player-mpv-input-file (expand-file-name "emms-mpv-input-file" emms-directory))
            (setq emms-player-list '(emms-player-mpv))))
#+end_src
** Config
#+begin_src emacs-lisp
(define-emms-simple-player mpv '(file url)
(regexp-opt '(".mp3" ".wav" ".mov" ".avi" ".mkv" ".mp4" ".flac" ".m4a" ))
"mpv" "--quiet" "--no-audio-display" "--no-terminal" "--shuffle" "yes")

(setq emms-source-file-default-directory (expand-file-name "~/media/music/")
      emms-browser-default-browse-type 'info-album
      emms-info-functions '(emms-info-exiftool)
      emms-browser-covers 'emms-browser-cache-thumbnail-async
      emms-playlist-buffer-name "*Music*")

(emms-browser-make-filter "all" 'ignore)
#+end_src
** Browser Info Format
Format strings govern the way items are displayed in the browser and playlist. You can customize these if you wish.
*** Documentation
Insert 'info-title' / 'info-artist' / 'info-album' into:
emms-browser-<type>-format
emms-browser-playlist-<type>-format

The format specifiers available include:
- %i indent relative to the current level
- %n the value of the item - eg -info-artist might be "pink floyd”
- %y the album year
- %A the album name
- %a the artist name of the track
- %t the title of the track
- %T the track number
- %cS a small album cover
- %cM a medium album cover
- %cL a big album cover

Note that if you use track-related items like %t, it will take the data from the first track.

The faces used to display the various fields are also customizable. They are in the format emms-browser-<type>-face, where type is one of "year/genre", "artist", "album" or "track". Note that faces lack the initial "info-" part. For example, to change the artist face, type M-x customize-face emms-browser-artist-face.
*** Config
In the browser buffer:
#+begin_src emacs-lisp
(setq emms-browser-info-title-format "%i%T. %t")
(setq emms-browser-info-album-format "%i%cS %n")
#+end_src
In the music buffer:
#+begin_src emacs-lisp
(setq emms-browser-playlist-info-title-format "%i%T. %t")
(setq emms-browser-playlist-info-album-format "%i%cM")
#+end_src
** Keybinds
Press tab to collapse/expand current item
#+begin_src emacs-lisp
(map! :map emms-browser-mode-map :n "<backtab>" #'emms-browser-toggle-subitems
                                 :n "<tab>"     #'emms-browser-toggle-subitems)
#+end_src
*** browser
**** evil
- keep
 <normal-state> +           emms-volume-raise
 <normal-state> -           emms-volume-lower
 <normal-state> /           emms-isearch-buffer
 <normal-state> <backtab>   emms-browser-toggle-subitems
 <normal-state> <tab>       emms-browser-toggle-subitems
 <normal-state> C           emms-browser-clear-playlist
 <normal-state> C-<return>  emms-browser-add-tracks-and-play
 <normal-state> C-j         emms-browser-next-non-track
 <normal-state> C-k         emms-browser-prev-non-track
 <normal-state> RET         emms-browser-add-tracks
- remove
- ???
 <normal-state> <           emms-seek-backward
 <normal-state> =           emms-volume-raise
 <normal-state> >           emms-seek-forward
<normal-state> D           emms-browser-delete-files
<normal-state> N           isearch-repeat-backward
<normal-state> X           emms-stop
<normal-state> [ [         emms-browser-prev-non-track
<normal-state> ] ]         emms-browser-next-non-track
<normal-state> ^           emms-browser-move-up-level
<normal-state> d           emms-browser-view-in-dired
<normal-state> g 0         emms-browser-expand-all
<normal-state> g 1         emms-browser-collapse-all
<normal-state> g 2         emms-browser-expand-to-level-2
<normal-state> g 3         emms-browser-expand-to-level-3
<normal-state> g 4         emms-browser-expand-to-level-4
<normal-state> g A         emms-browse-by-album
<normal-state> g C w       emms-browser-lookup-composer-on-wikipedia
<normal-state> g P w       emms-browser-lookup-performer-on-wikipedia
<normal-state> g a         emms-browse-by-artist
<normal-state> g b         emms-browse-by-genre
<normal-state> g c         emms-browse-by-composer
<normal-state> g d         emms-browser-view-in-dired
<normal-state> g j         emms-browser-next-non-track
<normal-state> g k         emms-browser-prev-non-track
<normal-state> g p         emms-browse-by-performer
<normal-state> g y         emms-browse-by-year
<normal-state> n           isearch-repeat-forward
<normal-state> r           emms-random
<normal-state> s A         emms-browser-search-by-album
<normal-state> s a         emms-browser-search-by-artist
<normal-state> s c         emms-browser-search-by-composer
<normal-state> s p         emms-browser-search-by-performer
<normal-state> s s         emms-browser-search-by-names
<normal-state> s t         emms-browser-search-by-title
<normal-state> u           emms-playlist-mode-undo
<normal-state> x           emms-pause
<normal-state> z c         emms-browser-collapse-all
<normal-state> z m         emms-browser-collapse-all
<normal-state> z o         emms-browser-expand-one-level
<normal-state> z r         emms-browser-expand-all
**** not evil
- already have
 W d                        emms-browser-view-in-dired
 ~+~                          emms-volume-raise
 ~-~                          emms-volume-lower
 C                          emms-browser-clear-playlist
 RET                        emms-browser-add-tracks
 C-RET                      emms-browser-add-tracks-and-play
 d                          emms-browser-view-in-dired
 /                          emms-isearch-buffer
- add in
 D                          emms-browser-delete-files
 q                          emms-browser-bury-buffer
 b 1                        emms-browse-by-artist
 b 2                        emms-browse-by-album
 b 3                        emms-browse-by-genre
 b 4                        emms-browse-by-year
 b 5                        emms-browse-by-composer
 b 6                        emms-browse-by-performer
 s A                        emms-browser-search-by-album
 s a                        emms-browser-search-by-artist
 s c                        emms-browser-search-by-composer
 s p                        emms-browser-search-by-performer
 s s                        emms-browser-search-by-names
 s t                        emms-browser-search-by-title
- ???
 1                          emms-browser-collapse-all
 2                          emms-browser-expand-to-level-2
 3                          emms-browser-expand-to-level-3
 4                          emms-browser-expand-to-level-4
 <                          emms-browser-previous-filter
 >                          emms-browser-next-filter
 <backtab>                  emms-browser-prev-non-track
 C-/                        emms-playlist-mode-undo
 E                          emms-browser-expand-all
- expand/collapse
 W 0                        emms-browser-expand-all
 W 1                        emms-browser-collapse-all
 W 2                        emms-browser-expand-to-level-2
 W 3                        emms-browser-expand-to-level-3
 W 4                        emms-browser-expand-to-level-4
- browse by
 W A                        emms-browse-by-album
 W a                        emms-browse-by-artist
 W b                        emms-browse-by-genre
 W c                        emms-browse-by-composer
 W p                        emms-browse-by-performer
 W y                        emms-browse-by-year
- look up
 W C w                      emms-browser-lookup-composer-on-wikipedia
 W P w                      emms-browser-lookup-performer-on-wikipedia
W j                        emms-browser-next-non-track
W k                        emms-browser-prev-non-track
^                          emms-browser-move-up-level
<tab>                      emms-browser-next-non-track
*** playlist
~+~                         emms-volume-raise
~-~                         emms-volume-lower
/ /                       emms-playlist-limit-to-all
/ a                       emms-playlist-limit-to-info-artist
/ b                       emms-playlist-limit-to-info-album
/ c                       emms-playlist-limit-to-info-composer
/ d                       emms-playlist-limit-to-description
/ g                       emms-playlist-limit-to-info-genre
/ n                       emms-playlist-limit-to-name
/ p                       emms-playlist-limit-to-info-performer
/ t                       emms-playlist-limit-to-info-title
/ y                       emms-playlist-limit-to-info-year
<                         emms-seek-backward
<emacs-state> M-SPC m i   emms-insert-file
<emacs-state> M-SPC m l   emms-toggle-repeat-playlist
<emacs-state> M-SPC m m   emms-shuffle
<emacs-state> M-SPC m p   emms-insert-playlist
<emacs-state> M-SPC m s   emms-playlist-save
<emacs-state> M-SPC m t   emms-toggle-repeat-track
<insert-state> M-SPC m i  emms-insert-file
<insert-state> M-SPC m l  emms-toggle-repeat-playlist
<insert-state> M-SPC m m  emms-shuffle
<insert-state> M-SPC m p  emms-insert-playlist
<insert-state> M-SPC m s  emms-playlist-save
<insert-state> M-SPC m t  emms-toggle-repeat-track
<motion-state> SPC m i    emms-insert-file
<motion-state> SPC m l    emms-toggle-repeat-playlist
<motion-state> SPC m m    emms-shuffle
<motion-state> SPC m p    emms-insert-playlist
<motion-state> SPC m s    emms-playlist-save
<motion-state> SPC m t    emms-toggle-repeat-track
<mouse-2>                 emms-playlist-mode-play-current-track
<normal-state> +          emms-volume-raise
<normal-state> -          emms-volume-lower
<normal-state> .          emms-playlist-mode-center-current
<normal-state> <          emms-seek-backward
<normal-state> =          emms-volume-raise
<normal-state> >          emms-seek-forward
<normal-state> C          emms-playlist-clear
<normal-state> C-j        emms-next
<normal-state> C-k        emms-previous
<normal-state> D          emms-playlist-mode-kill-track
<normal-state> G          emms-playlist-mode-last
<normal-state> M-y        emms-playlist-mode-yank-pop
<normal-state> O          evil-collection-emms-playlist-mode-insert-newline-above
<normal-state> P          evil-collection-emms-playlist-mode-paste-before
<normal-state> R          emms-tag-editor-rename
<normal-state> RET        emms-playlist-mode-play-smart
<normal-state> S          nil
<normal-state> SPC m i    emms-insert-file
<normal-state> SPC m l    emms-toggle-repeat-playlist
<normal-state> SPC m m    emms-shuffle
<normal-state> SPC m p    emms-insert-playlist
<normal-state> SPC m s    emms-playlist-save
<normal-state> SPC m t    emms-toggle-repeat-track
<normal-state> X          emms-stop
<normal-state> [ [        emms-playlist-mode-previous
<normal-state> ] ]        emms-playlist-mode-next
<normal-state> a          emms-playlist-mode-add-contents
<normal-state> d          emms-playlist-mode-goto-dired-at-point
<normal-state> g d        emms-playlist-mode-goto-dired-at-point
<normal-state> g g        emms-playlist-mode-first
<normal-state> g j        emms-next
<normal-state> g k        emms-previous
<normal-state> o          evil-collection-emms-playlist-mode-insert-newline-below
<normal-state> p          evil-collection-emms-playlist-mode-paste-after
<normal-state> r          emms-random
<normal-state> s          nil
<normal-state> u          emms-playlist-mode-undo
<normal-state> x          emms-pause
<normal-state> z e        emms-tag-editor-edit
<normal-state> z p        emms-playlist-set-playlist-buffer
<normal-state> z s        emms-show
<visual-state> D          emms-playlist-mode-kill
<visual-state> SPC m i    emms-insert-file
<visual-state> SPC m l    emms-toggle-repeat-playlist
<visual-state> SPC m m    emms-shuffle
<visual-state> SPC m p    emms-insert-playlist
<visual-state> SPC m s    emms-playlist-save
<visual-state> SPC m t    emms-toggle-repeat-track
>                         emms-seek-forward
?                         describe-mode
C                         emms-playlist-clear
C-/                       emms-playlist-mode-undo
C-M-i                     ispell-complete-word
C-_                       emms-playlist-mode-undo
C-j                       emms-playlist-mode-insert-newline
C-k                       emms-playlist-mode-kill-track
C-n                       next-line
C-p                       previous-line
C-w                       emms-playlist-mode-kill
C-x C-s                   emms-playlist-save
C-x u                     emms-playlist-mode-undo
C-y                       emms-playlist-mode-yank
D                         emms-playlist-mode-kill-track
E                         emms-tag-editor-edit
K                         emms-playlist-mode-current-kill
M-<                       emms-playlist-mode-first
M->                       emms-playlist-mode-last
M-n                       emms-playlist-mode-next
M-p                       emms-playlist-mode-previous
M-y                       emms-playlist-mode-yank-pop
P                         emms-pause
R                         emms-tag-editor-rename
RET                       emms-playlist-mode-play-smart
S C                       emms-playlist-sort-by-info-composer
S L                       emms-playlist-sort-by-list
S N                       emms-playlist-sort-by-name
S T                       emms-playlist-sort-by-file-mtime
S a                       emms-playlist-sort-by-info-artist
S b                       emms-playlist-sort-by-info-album
S c                       emms-playlist-sort-by-play-count
S e                       emms-playlist-sort-by-file-extension
S l                       emms-playlist-sort-by-last-played
S n                       emms-playlist-sort-by-natural-order
S o                       emms-playlist-sort-by-info-note
S p                       emms-playlist-sort-by-info-performer
S t                       emms-playlist-sort-by-info-title
S y                       emms-playlist-sort-by-info-year
SPC                       scroll-up
a                         emms-playlist-mode-add-contents
b                         emms-playlist-set-playlist-buffer
c                         emms-playlist-mode-center-current
d                         emms-playlist-mode-goto-dired-at-point
f                         emms-show
n                         emms-next
p                         emms-previous
q                         #<anonymous-function>
r                         emms-random
s                         emms-stop
* Inactive
** Mastodon                                    :NOT_IN_USE:
#+begin_src emacs-lisp
;; mastodon config
;;(setq mastodon-instance-url "https://mathstodon.xyz" mastodon-active-user "thain")
#+end_src
** Vterm
#+begin_src emacs-lisp
;; vterm config
;; (after! vterm
;;   (setq vterm-shell "/usr/bin/fish"
;;         vterm-ignore-blink-cursor nil))
#+end_src
